# –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –∏—Ö –ø—Ä–æ—Ñ–∏–ª—è–º–∏
# –¢—Ä–µ–±—É–µ—Ç –∑–∞–ø—É—Å–∫ –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
if (-not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()
).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Host "‚ö†Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!" -ForegroundColor Red
    pause
    exit
}

# === –£—Ç–∏–ª–∏—Ç—ã ===
function Pause {
    Write-Host "`n–ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    $null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
}

# === 1. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –¥–∏—Å–∫–µ D ===
function Create-User {
    try {
        $username = Read-Host "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        if ([string]::IsNullOrWhiteSpace($username)) {
            Write-Host "‚ùå –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º." -ForegroundColor Red
            Pause
            return
        }

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ
        if (Get-LocalUser -Name $username -ErrorAction SilentlyContinue) {
            Write-Host "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $username —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç." -ForegroundColor Red
            Pause
            return
        }

        $password = Read-Host "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å (–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º)"
        $fullname = Read-Host "–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–º—è (–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º)"

        $SecurePassword = if ([string]::IsNullOrWhiteSpace($password)) {
            (ConvertTo-SecureString " " -AsPlainText -Force)  # –∑–∞–≥–ª—É—à–∫–∞
        } else {
            (ConvertTo-SecureString $password -AsPlainText -Force)
        }

        if ([string]::IsNullOrWhiteSpace($fullname)) {
            New-LocalUser -Name $username -Password $SecurePassword
        } else {
            New-LocalUser -Name $username -Password $SecurePassword -FullName $fullname
        }

        Add-LocalGroupMember -Group "Users" -Member $username -ErrorAction SilentlyContinue

        $User = Get-LocalUser -Name $username
        $SID = $User.SID.Value
        $RegistryPath = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList\$SID"
        $NewProfilePath = "D:\Users\$username"

        if (!(Test-Path "D:\Users")) { New-Item -ItemType Directory -Path "D:\Users" -Force | Out-Null }
        if (!(Test-Path $NewProfilePath)) { New-Item -ItemType Directory -Path $NewProfilePath -Force | Out-Null }

        # –ñ–¥—ë–º, –ø–æ–∫–∞ Windows —Å–æ–∑–¥–∞—Å—Ç –∑–∞–ø–∏—Å—å –≤ —Ä–µ–µ—Å—Ç—Ä–µ
        $timeout = 30
        $count = 0
        while (!(Test-Path $RegistryPath) -and $count -lt $timeout) {
            Start-Sleep -Seconds 1
            $count++
        }

        if (Test-Path $RegistryPath) {
            Set-ItemProperty -Path $RegistryPath -Name "ProfileImagePath" -Value $NewProfilePath
        }

        Write-Host "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $username —Å–æ–∑–¥–∞–Ω. –ü—Ä–æ—Ñ–∏–ª—å –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â—ë–Ω –≤ $NewProfilePath" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
    }
    Pause
}

# === 2. –ü–µ—Ä–µ–Ω–æ—Å –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –¥–∏—Å–∫ D ===
function Move-UserProfile {
    try {
        $users = Get-LocalUser | Where-Object { -not $_.Disabled }
        if ($users.Count -eq 0) {
            Write-Host "‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞." -ForegroundColor Red
            Pause
            return
        }

        Write-Host "`nüìã –°–ø–∏—Å–æ–∫ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:" -ForegroundColor Cyan
        for ($i = 0; $i -lt $users.Count; $i++) {
            Write-Host "[$($i+1)] $($users[$i].Name)"
        }

        $choice = Read-Host "`n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞"
        if ($choice -match '^\d+$' -and $choice -ge 1 -and $choice -le $users.Count) {
            $Username = $users[$choice-1].Name
        } else {
            Write-Host "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä." -ForegroundColor Red
            Pause
            return
        }

        $User = Get-LocalUser -Name $Username -ErrorAction Stop
        $SID = $User.SID.Value
        $RegistryPath = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList\$SID"
        $NewProfilePath = "D:\Users\$Username"

        if (!(Test-Path $RegistryPath)) {
            Write-Host "‚ùå –ó–∞–ø–∏—Å—å –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è $Username –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ù—É–∂–Ω–æ —Ö–æ—Ç—è –±—ã —Ä–∞–∑ –≤–æ–π—Ç–∏ –ø–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º." -ForegroundColor Red
            Pause
            return
        }

        if (!(Test-Path "D:\Users")) { New-Item -ItemType Directory -Path "D:\Users" -Force | Out-Null }
        if (!(Test-Path $NewProfilePath)) { New-Item -ItemType Directory -Path $NewProfilePath -Force | Out-Null }

        $OldProfilePath = "C:\Users\$Username"

        if (Test-Path $OldProfilePath) {
            Write-Host "‚û°Ô∏è –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è..." -ForegroundColor Yellow
            robocopy $OldProfilePath $NewProfilePath /E /COPYALL /R:3 /W:1 /NFL /NDL | Out-Null
        }

        Set-ItemProperty -Path $RegistryPath -Name "ProfileImagePath" -Value $NewProfilePath

        if (Test-Path $OldProfilePath) {
            Remove-Item -Path $OldProfilePath -Recurse -Force -ErrorAction SilentlyContinue
        }

        Write-Host "‚úÖ –ü—Ä–æ—Ñ–∏–ª—å $Username –ø–µ—Ä–µ–Ω–µ—Å—ë–Ω –≤ $NewProfilePath" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
    }
    Pause
}

# === 3. –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è ===
function Remove-User {
    try {
        $users = Get-LocalUser
        if ($users.Count -eq 0) {
            Write-Host "‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è." -ForegroundColor Red
            Pause
            return
        }

        Write-Host "`nüìã –°–ø–∏—Å–æ–∫ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:" -ForegroundColor Cyan
        for ($i = 0; $i -lt $users.Count; $i++) {
            Write-Host "[$($i+1)] $($users[$i].Name)"
        }

        $choice = Read-Host "`n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"
        if ($choice -match '^\d+$' -and $choice -ge 1 -and $choice -le $users.Count) {
            $Username = $users[$choice-1].Name
        } else {
            Write-Host "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä." -ForegroundColor Red
            Pause
            return
        }

        Remove-LocalUser -Name $Username -ErrorAction Stop

        $Paths = @("C:\Users\$Username", "D:\Users\$Username")
        foreach ($p in $Paths) {
            if (Test-Path $p) {
                Remove-Item -Path $p -Recurse -Force -ErrorAction SilentlyContinue
            }
        }

        Write-Host "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $Username –∏ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å —É–¥–∞–ª–µ–Ω—ã." -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
    }
    Pause
}

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
function Show-Menu {
    Clear-Host
    Write-Host "=============================================" -ForegroundColor Cyan
    Write-Host "   –ú–ï–ù–Æ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò Windows" -ForegroundColor Cyan
    Write-Host "=============================================" -ForegroundColor Cyan
    Write-Host "1. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" -ForegroundColor Yellow
    Write-Host "2. –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –¥–∏—Å–∫ D" -ForegroundColor Yellow
    Write-Host "3. –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" -ForegroundColor Yellow
    Write-Host "0. –í—ã—Ö–æ–¥" -ForegroundColor Red
    Write-Host ""
}

# === –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ===
do {
    Show-Menu
    $choice = Read-Host "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ"

    switch ($choice) {
        "1" { Create-User }
        "2" { Move-UserProfile }
        "3" { Remove-User }
        "0" { Write-Host "–í—ã—Ö–æ–¥..." -ForegroundColor Green }
        default {
            Write-Host "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!" -ForegroundColor Red
            Pause
        }
    }
} while ($choice -ne "0")
