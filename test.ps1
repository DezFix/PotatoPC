# –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ Windows
# –¢—Ä–µ–±—É–µ—Ç –∑–∞–ø—É—Å–∫ –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
if (-not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()
).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Host "‚ö†Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!" -ForegroundColor Red
    pause
    exit
}

# === –£—Ç–∏–ª–∏—Ç—ã ===
function Pause {
    Write-Host "`n–ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    $null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
}

function Get-UserList {
    Get-LocalUser |
        Where-Object {
            $_.Enabled -eq $true -and
            $_.Name -notin @("Administrator", "DefaultAccount", "WDAGUtilityAccount")
        }
}

# === 1. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–µ—Ä–µ–Ω–æ—Å–æ–º —á–µ—Ä–µ–∑ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É ===
function Create-User {
    try {
        $username = Read-Host "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        if ([string]::IsNullOrWhiteSpace($username)) {
            Write-Host "‚ùå –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º." -ForegroundColor Red
            Pause
            return
        }

        if (Get-LocalUser -Name $username -ErrorAction SilentlyContinue) {
            Write-Host "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $username —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç." -ForegroundColor Red
            Pause
            return
        }

        $password = Read-Host "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å (Enter –¥–ª—è –ø—É—Å—Ç–æ–≥–æ –ø–∞—Ä–æ–ª—è)"
        $fullname = Read-Host "–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–º—è (–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º)"

        Write-Host "üìù –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $username..." -ForegroundColor Yellow

        # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —É—á–µ—Ç–æ–º –ø—É—Å—Ç–æ–≥–æ –ø–∞—Ä–æ–ª—è
        if ([string]::IsNullOrWhiteSpace($password)) {
            if ([string]::IsNullOrWhiteSpace($fullname)) {
                New-LocalUser -Name $username -NoPassword -Description "–°–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ —Å–∫—Ä–∏–ø—Ç"
            } else {
                New-LocalUser -Name $username -NoPassword -FullName $fullname -Description "–°–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ —Å–∫—Ä–∏–ø—Ç"
            }
        } else {
            $SecurePassword = ConvertTo-SecureString $password -AsPlainText -Force
            if ([string]::IsNullOrWhiteSpace($fullname)) {
                New-LocalUser -Name $username -Password $SecurePassword -Description "–°–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ —Å–∫—Ä–∏–ø—Ç"
            } else {
                New-LocalUser -Name $username -Password $SecurePassword -FullName $fullname -Description "–°–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ —Å–∫—Ä–∏–ø—Ç"
            }
        }

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        try {
            Add-LocalGroupMember -Group "Users" -Member $username -ErrorAction Stop
        } catch {
            try {
                Add-LocalGroupMember -Group "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏" -Member $username -ErrorAction Stop
            } catch {
                Write-Host "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" -ForegroundColor Yellow
            }
        }

        Write-Host "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $username —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–Ω–æ—Å–∞ –Ω–∞ D:
        $choice = Read-Host "üîÑ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–Ω–æ—Å –ø—Ä–æ—Ñ–∏–ª—è –Ω–∞ –¥–∏—Å–∫ D –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ? (Y/N)"
        if ($choice -in @('Y','y')) {
            Setup-ProfileRedirect -Username $username
        }

    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
    }
    Pause
}

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è —á–µ—Ä–µ–∑ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É ===
function Setup-ProfileRedirect {
    param([string]$Username)
    
    try {
        $StandardProfilePath = "C:\Users\$Username"
        $NewProfilePath = "D:\Users\$Username"
        
        Write-Host "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è..." -ForegroundColor Yellow
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –Ω–∞ –¥–∏—Å–∫–µ D
        if (!(Test-Path "D:\Users")) { 
            New-Item -ItemType Directory -Path "D:\Users" -Force | Out-Null 
            Write-Host "   –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ D:\Users" -ForegroundColor Gray
        }
        if (!(Test-Path $NewProfilePath)) { 
            New-Item -ItemType Directory -Path $NewProfilePath -Force | Out-Null 
            Write-Host "   –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ $NewProfilePath" -ForegroundColor Gray
        }

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–∞–ø–∫–∞ –Ω–∞ C:
        if (Test-Path $StandardProfilePath) {
            Write-Host "‚ö†Ô∏è –ü–∞–ø–∫–∞ $StandardProfilePath —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Yellow
            return
        }

        # –°–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É
        Write-Host "üîó –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–π —Å—Å—ã–ª–∫–∏..." -ForegroundColor Yellow
        $result = cmd /c "mklink /D `"$StandardProfilePath`" `"$NewProfilePath`"" 2>&1
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ –°–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!" -ForegroundColor Green
            Write-Host "üìÅ $StandardProfilePath -> $NewProfilePath" -ForegroundColor Cyan
            Write-Host "‚ÑπÔ∏è  –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ –ø—Ä–æ—Ñ–∏–ª—å –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω –Ω–∞ –¥–∏—Å–∫–µ D" -ForegroundColor Cyan
        } else {
            Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É: $result" -ForegroundColor Red
            Write-Host "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –º–µ—Ç–æ–¥ –ø–µ—Ä–µ–Ω–æ—Å–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" -ForegroundColor Yellow
        }
        
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è: $($_.Exception.Message)" -ForegroundColor Red
    }
}

# === 2. –ü–µ—Ä–µ–Ω–æ—Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===
function Move-UserProfile {
    try {
        $users = Get-UserList
        if ($users.Count -eq 0) {
            Write-Host "‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞." -ForegroundColor Red
            Pause
            return
        }

        Write-Host "`nüìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:" -ForegroundColor Cyan
        for ($i = 0; $i -lt $users.Count; $i++) {
            $user = $users[$i]
            $userSID = $user.SID.Value
            $regPath = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList\$userSID"
            $currentPath = "–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ —Å–æ–∑–¥–∞–Ω"
            $color = "Gray"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É
            $standardPath = "C:\Users\$($user.Name)"
            if (Test-Path $standardPath) {
                $item = Get-Item $standardPath -Force
                if ($item.Attributes -band [System.IO.FileAttributes]::ReparsePoint) {
                    $currentPath = "–°–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ -> D:\Users\$($user.Name)"
                    $color = "Green"
                }
            }
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–µ—Å—Ç—Ä
            if (Test-Path $regPath -and $currentPath -eq "–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ —Å–æ–∑–¥–∞–Ω") {
                $profilePath = (Get-ItemProperty -Path $regPath -Name "ProfileImagePath" -ErrorAction SilentlyContinue).ProfileImagePath
                if ($profilePath) {
                    $currentPath = $profilePath
                    $color = if ($profilePath.StartsWith("C:\")) { "Red" } else { "Green" }
                }
            }
            
            Write-Host "[$($i+1)] " -NoNewline
            Write-Host "$($user.Name)" -NoNewline -ForegroundColor White
            Write-Host " - $currentPath" -ForegroundColor $color
        }

        $choice = Read-Host "`n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞"
        if ($choice -notmatch '^\d+$' -or $choice -lt 1 -or $choice -gt $users.Count) {
            Write-Host "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä." -ForegroundColor Red
            Pause
            return
        }

        $Username = $users[$choice-1].Name
        $User = Get-LocalUser -Name $Username
        $SID = $User.SID.Value
        $RegistryPath = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList\$SID"
        $StandardProfilePath = "C:\Users\$Username"
        $NewProfilePath = "D:\Users\$Username"

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        $sessions = quser 2>$null | Where-Object { $_ -match $Username }
        if ($sessions) {
            Write-Host "‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $Username –∞–∫—Ç–∏–≤–µ–Ω! –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Å–µ–∞–Ω—Å –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–Ω–æ—Å–æ–º." -ForegroundColor Red
            Pause
            return
        }

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É
        if (Test-Path $StandardProfilePath) {
            $item = Get-Item $StandardProfilePath -Force
            if ($item.Attributes -band [System.IO.FileAttributes]::ReparsePoint) {
                Write-Host "‚ÑπÔ∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $Username —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –¥–∏—Å–∫ D" -ForegroundColor Yellow
                Pause
                return
            }
        }

        # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω - —Å–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É
        if (!(Test-Path $RegistryPath)) {
            Write-Host "‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –≤—Ö–æ–¥–∏–ª –≤ —Å–∏—Å—Ç–µ–º—É. –°–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–Ω–æ—Å–∞." -ForegroundColor Yellow
            Setup-ProfileRedirect -Username $Username
            Pause
            return
        }

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å –ø—Ä–æ—Ñ–∏–ª—è
        $CurrentPath = (Get-ItemProperty -Path $RegistryPath -Name "ProfileImagePath" -ErrorAction SilentlyContinue).ProfileImagePath
        
        if (!$CurrentPath) {
            Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—É—Ç—å –ø—Ä–æ—Ñ–∏–ª—è" -ForegroundColor Red
            Pause
            return
        }
        
        if ($CurrentPath.StartsWith("D:\")) {
            Write-Host "‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $Username —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –¥–∏—Å–∫–µ D" -ForegroundColor Yellow
            Pause
            return
        }

        Write-Host "üìÅ –¢–µ–∫—É—â–∏–π –ø—É—Ç—å: $CurrentPath" -ForegroundColor Yellow
        Write-Host "üìÅ –ù–æ–≤—ã–π –ø—É—Ç—å: $NewProfilePath" -ForegroundColor Green

        # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –Ω–∞ –¥–∏—Å–∫–µ D
        if (!(Test-Path "D:\Users")) { 
            New-Item -ItemType Directory -Path "D:\Users" -Force | Out-Null 
        }

        # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        if (Test-Path $CurrentPath) {
            Write-Host "üì¶ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ—Ñ–∏–ª—è..." -ForegroundColor Yellow
            robocopy $CurrentPath $NewProfilePath /E /COPYALL /R:3 /W:1 /NFL /NDL | Out-Null
            
            if ($LASTEXITCODE -le 7) {
                Write-Host "‚úÖ –§–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
            } else {
                Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤ (–∫–æ–¥: $LASTEXITCODE)" -ForegroundColor Red
                Pause
                return
            }
        }

        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—É—Ç–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–µ
        Set-ItemProperty -Path $RegistryPath -Name "ProfileImagePath" -Value $NewProfilePath
        Write-Host "üìù –ü—É—Ç—å –≤ —Ä–µ–µ—Å—Ç—Ä–µ –∏–∑–º–µ–Ω–µ–Ω" -ForegroundColor Green

        # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ä–æ–π –ø–∞–ø–∫–∏
        if (Test-Path $CurrentPath) {
            $deleteChoice = Read-Host "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∏—Å—Ö–æ–¥–Ω—É—é –ø–∞–ø–∫—É $CurrentPath? (Y/N)"
            if ($deleteChoice -in @('Y','y')) {
                Remove-Item -Path $CurrentPath -Recurse -Force -ErrorAction SilentlyContinue
                Write-Host "‚úÖ –ò—Å—Ö–æ–¥–Ω–∞—è –ø–∞–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∞" -ForegroundColor Green
            }
        }

        Write-Host "`n‚úÖ –ü—Ä–æ—Ñ–∏–ª—å $Username —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å—ë–Ω –Ω–∞ –¥–∏—Å–∫ D!" -ForegroundColor Green
        Write-Host "‚ÑπÔ∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∏—Å—Ç–µ–º—É." -ForegroundColor Cyan
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
    }
    Pause
}

# === 3. –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===
function Remove-User {
    try {
        $users = Get-UserList
        if ($users.Count -eq 0) {
            Write-Host "‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è." -ForegroundColor Red
            Pause
            return
        }

        Write-Host "`nüìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:" -ForegroundColor Cyan
        for ($i = 0; $i -lt $users.Count; $i++) {
            Write-Host "[$($i+1)] $($users[$i].Name)"
        }

        $choice = Read-Host "`n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"
        if ($choice -notmatch '^\d+$' -or $choice -lt 1 -or $choice -gt $users.Count) {
            Write-Host "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä." -ForegroundColor Red
            Pause
            return
        }

        $Username = $users[$choice-1].Name

        # –ü–æ–ª—É—á–µ–Ω–∏–µ SID –∏ –ø—É—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—è
        $User = Get-LocalUser -Name $Username
        $SID = $User.SID.Value
        $RegistryPath = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList\$SID"
        $StandardProfilePath = "C:\Users\$Username"
        
        $ProfilePath = ""
        if (Test-Path $RegistryPath) {
            $ProfilePath = (Get-ItemProperty -Path $RegistryPath -Name "ProfileImagePath" -ErrorAction SilentlyContinue).ProfileImagePath
        }

        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
        Write-Host "`n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!" -ForegroundColor Red
        Write-Host "–ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ:" -ForegroundColor Yellow
        Write-Host "- –£—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å: $Username" -ForegroundColor Yellow
        if ($ProfilePath) {
            Write-Host "- –ü–∞–ø–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è: $ProfilePath" -ForegroundColor Yellow
        }
        Write-Host "- –ü–∞–ø–∫–∏ C:\Users\$Username –∏ D:\Users\$Username (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)" -ForegroundColor Yellow
        Write-Host "- –°–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)" -ForegroundColor Yellow
        Write-Host "- –ó–∞–ø–∏—Å—å –≤ —Ä–µ–µ—Å—Ç—Ä–µ" -ForegroundColor Yellow
        
        $confirm = Read-Host "`n–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í–≤–µ–¥–∏—Ç–µ 'YES' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"
        if ($confirm -ne "YES") {
            Write-Host "‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ." -ForegroundColor Yellow
            Pause
            return
        }

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        $sessions = quser 2>$null | Where-Object { $_ -match $Username }
        if ($sessions) {
            Write-Host "‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $Username –∞–∫—Ç–∏–≤–µ–Ω! –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Å–µ–∞–Ω—Å –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º." -ForegroundColor Red
            Pause
            return
        }

        # –£–¥–∞–ª–µ–Ω–∏–µ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏
        Remove-LocalUser -Name $Username -ErrorAction Stop
        Write-Host "‚úÖ –£—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞" -ForegroundColor Green

        # –£–¥–∞–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–π —Å—Å—ã–ª–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
        if (Test-Path $StandardProfilePath) {
            $item = Get-Item $StandardProfilePath -Force
            if ($item.Attributes -band [System.IO.FileAttributes]::ReparsePoint) {
                Write-Host "üîó –£–¥–∞–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–π —Å—Å—ã–ª–∫–∏..." -ForegroundColor Yellow
                try {
                    Remove-Item -Path $StandardProfilePath -Force
                    Write-Host "   ‚úÖ –°–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ —É–¥–∞–ª–µ–Ω–∞" -ForegroundColor Green
                } catch {
                    Write-Host "   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É: $($_.Exception.Message)" -ForegroundColor Yellow
                }
            }
        }

        # –£–¥–∞–ª–µ–Ω–∏–µ –ø–∞–ø–æ–∫ –ø—Ä–æ—Ñ–∏–ª—è
        $PathsToDelete = @("C:\Users\$Username", "D:\Users\$Username")
        if ($ProfilePath -and $ProfilePath -notin $PathsToDelete) {
            $PathsToDelete += $ProfilePath
        }

        foreach ($path in $PathsToDelete) {
            if (Test-Path $path) {
                Write-Host "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ $path..." -ForegroundColor Yellow
                try {
                    Remove-Item -Path $path -Recurse -Force -ErrorAction Stop
                    Write-Host "   ‚úÖ –£–¥–∞–ª–µ–Ω–æ" -ForegroundColor Green
                } catch {
                    Write-Host "   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å: $($_.Exception.Message)" -ForegroundColor Yellow
                }
            }
        }

        # –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ —Ä–µ–µ—Å—Ç—Ä–∞
        if (Test-Path $RegistryPath) {
            try {
                Remove-Item -Path $RegistryPath -Recurse -Force
                Write-Host "‚úÖ –ó–∞–ø–∏—Å—å –≤ —Ä–µ–µ—Å—Ç—Ä–µ —É–¥–∞–ª–µ–Ω–∞" -ForegroundColor Green
            } catch {
                Write-Host "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –∏–∑ —Ä–µ–µ—Å—Ç—Ä–∞: $($_.Exception.Message)" -ForegroundColor Yellow
            }
        }

        Write-Host "`n‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $Username –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω!" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
    }
    Pause
}

# === 4. –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª—è—Ö ===
function Show-ProfileInfo {
    try {
        $users = Get-UserList
        if ($users.Count -eq 0) {
            Write-Host "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã." -ForegroundColor Red
            Pause
            return
        }

        Write-Host "`nüìä –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–†–û–§–ò–õ–Ø–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô" -ForegroundColor Cyan
        Write-Host "=" * 60 -ForegroundColor Cyan

        foreach ($user in $users) {
            Write-Host "`nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $($user.Name)" -ForegroundColor Yellow
            Write-Host "   SID: $($user.SID.Value)" -ForegroundColor Gray
            
            $regPath = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList\$($user.SID.Value)"
            $standardPath = "C:\Users\$($user.Name)"
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–π —Å—Å—ã–ª–∫–∏
            if (Test-Path $standardPath) {
                $item = Get-Item $standardPath -Force
                if ($item.Attributes -band [System.IO.FileAttributes]::ReparsePoint) {
                    $target = $item.Target
                    Write-Host "   üîó –°–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞: $standardPath -> $target" -ForegroundColor Green
                } else {
                    Write-Host "   üìÅ –û–±—ã—á–Ω–∞—è –ø–∞–ø–∫–∞: $standardPath" -ForegroundColor White
                }
            }
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–µ—Å—Ç—Ä–∞
            if (Test-Path $regPath) {
                $profilePath = (Get-ItemProperty -Path $regPath -Name "ProfileImagePath" -ErrorAction SilentlyContinue).ProfileImagePath
                if ($profilePath) {
                    $color = if ($profilePath.StartsWith("C:\")) { "Red" } else { "Green" }
                    Write-Host "   üìù –ü—É—Ç—å –≤ —Ä–µ–µ—Å—Ç—Ä–µ: $profilePath" -ForegroundColor $color
                    
                    if (Test-Path $profilePath) {
                        $size = (Get-ChildItem -Path $profilePath -Recurse -Force -ErrorAction SilentlyContinue | 
                                Measure-Object -Property Length -Sum).Sum
                        $sizeMB = [math]::Round($size / 1MB, 2)
                        Write-Host "   üíæ –†–∞–∑–º–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è: $sizeMB MB" -ForegroundColor Gray
                    }
                }
            } else {
                Write-Host "   ‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –≤—Ö–æ–¥–∏–ª –≤ —Å–∏—Å—Ç–µ–º—É" -ForegroundColor Gray
            }
            
            Write-Host "   " + "-" * 50 -ForegroundColor Gray
        }

        Write-Host "`n–õ–µ–≥–µ–Ω–¥–∞:" -ForegroundColor White
        Write-Host "üîó –ó–µ–ª–µ–Ω—ã–π - –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ –¥–∏—Å–∫–µ D –∏–ª–∏ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞" -ForegroundColor Green
        Write-Host "üìÅ –ö—Ä–∞—Å–Ω—ã–π - –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ –¥–∏—Å–∫–µ C" -ForegroundColor Red
        Write-Host "‚ÑπÔ∏è –°–µ—Ä—ã–π - –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ —Å–æ–∑–¥–∞–Ω" -ForegroundColor Gray
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
    }
    Pause
}

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
function Show-Menu {
    Clear-Host
    Write-Host "=============================================" -ForegroundColor Cyan
    Write-Host "   –ú–ï–ù–Æ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò Windows" -ForegroundColor Cyan
    Write-Host "=============================================" -ForegroundColor Cyan
    Write-Host "1. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" -ForegroundColor Yellow
    Write-Host "2. –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –¥–∏—Å–∫ D" -ForegroundColor Yellow
    Write-Host "3. –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ)" -ForegroundColor Yellow
    Write-Host "4. –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª—è—Ö" -ForegroundColor Cyan
    Write-Host "0. –í—ã—Ö–æ–¥" -ForegroundColor Red
    Write-Host ""
    Write-Host "üí° –°–æ–≤–µ—Ç: –î–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–µ—Ç–æ–¥ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫" -ForegroundColor Gray
}

# === –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ===
do {
    Show-Menu
    $choice = Read-Host "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ"

    switch ($choice) {
        "1" { Create-User }
        "2" { Move-UserProfile }
        "3" { Remove-User }
        "4" { Show-ProfileInfo }
        "0" { Write-Host "–í—ã—Ö–æ–¥..." -ForegroundColor Green }
        default {
            Write-Host "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!" -ForegroundColor Red
            Pause
        }
    }
} while ($choice -ne "0")
